// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  birthday  DateTime
  cpf       String?
  cnpj      String?
  password  String
  status    String   @default("ACTIVE")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  campaigns DonationCampaign[]
  donations Donation[]
}

model DonationCampaign {
  id          String @id @default(uuid()) @db.Uuid
  title       String
  description String
  goal        Float
  status      String

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  campaignOrganizer   User       @relation(fields: [campaignOrganizerId], references: [id])
  campaignOrganizerId String     @unique() @map("campaign_organizer_id") @db.Uuid
  donations           Donation[]
}

model Donation {
  id     String @id @default(uuid()) @db.Uuid
  amount Float

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  campaign   DonationCampaign @relation(fields: [campaignId], references: [id])
  campaignId String           @unique @map("campaign_id") @db.Uuid
  donor      User             @relation(fields: [donorId], references: [id])
  donorId    String           @unique @map("donor_id") @db.Uuid
}
